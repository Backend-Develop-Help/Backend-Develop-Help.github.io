(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{362:function(a,t,s){"use strict";s.r(t);var e=s(8),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"eureka注册中心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eureka注册中心"}},[a._v("#")]),a._v(" EureKa注册中心")]),a._v(" "),t("p",[t("strong",[a._v("服务调用出现的问题")])]),a._v(" "),t("p",[a._v("服务的部署位置是会变化的，硬编码写着老是变动很麻烦")]),a._v(" "),t("ul",[t("li",[a._v("服务消费者改如何获取服务提供者的地址信息？")]),a._v(" "),t("li",[a._v("如果有多个服务提供者，消费者该如何选择？")]),a._v(" "),t("li",[a._v("消费者如何得知服务提供者的健康状态？")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201214837886.png",alt:"image-20220201214837886"}})]),a._v(" "),t("p",[t("strong",[a._v("Eureka的作用")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201215220036.png",alt:"image-20220201215220036"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201215301897.png",alt:"image-20220201215301897"}})]),a._v(" "),t("p",[a._v("总结：")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201215323067.png",alt:"image-20220201215323067"}})]),a._v(" "),t("h2",{attrs:{id:"搭建eureka服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建eureka服务"}},[a._v("#")]),a._v(" 搭建eureka服务")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201215438171.png",alt:"image-20220201215438171"}})]),a._v(" "),t("blockquote",[t("p",[a._v("搭建EurekaServer服务端步骤如下：")])]),a._v(" "),t("p",[a._v("1、创建项目，引入spring-cloud-starter-netflix-eureka-server的依赖")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201215607995.png",alt:"image-20220201215607995"}})]),a._v(" "),t("p",[a._v("2、编写启动类，添加@EnableEurekaServer注解")]),a._v(" "),t("p",[a._v("3、添加application.yml文件，编写下面的配置")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201215706428.png",alt:"image-20220201215706428"}})]),a._v(" "),t("p",[a._v("启动成功这个是注册到Eureka的实例")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201220129985.png",alt:"image-20220201220129985"}})]),a._v(" "),t("blockquote",[t("p",[a._v("注册user-service")])]),a._v(" "),t("p",[a._v("将user-service服务注册到EurekaServer步骤如下")]),a._v(" "),t("p",[a._v("1、在user-service项目引入spring-cloud-starter-netflix-eureka-client的依赖")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201220457146.png",alt:"image-20220201220457146"}})]),a._v(" "),t("p",[a._v("2、在application.yml文件，编写下面的配置：(服务名称&eureka的地址信息)")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201220533394.png",alt:"image-20220201220533394"}})]),a._v(" "),t("p",[a._v("同理注册order-service")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221038091.png",alt:"image-20220201221038091"}})]),a._v(" "),t("p",[a._v("另外，我们可以将user-service多次启动，模拟多实例部署，但是为了避免端口冲突，需要修改端口设置：")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221142683.png",alt:"image-20220201221142683"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221252619.png",alt:"image-20220201221252619"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221356934.png",alt:"image-20220201221356934"}})]),a._v(" "),t("p",[a._v("可以发现这里多出来了一个服务，我们也可以将它启动，这样就完成了一次启动&注册两个实例")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221419437.png",alt:"image-20220201221419437"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221526766.png",alt:"image-20220201221526766"}})]),a._v(" "),t("p",[a._v("总结：")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/ethandu/%E5%BE%AE%E6%9C%8D%E5%8A%A1/SpringCloud+%E5%BE%AE%E6%9C%8D%E5%8A%A1.assets/image-20220201221753843.png",alt:"image-20220201221753843"}})]),a._v(" "),t("blockquote",[t("p",[a._v("在order-service完成服务拉取")])]),a._v(" "),t("p",[a._v("服务拉取是基于服务名称获取服务列表，然后再对服务列表做负载均衡")]),a._v(" "),t("p",[a._v("1、修改OrderService的代码，修改访问的url路径，用服务名代替ip，端口：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://userservice/user/"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" order"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getUserId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("2、在order-service项目的启动类OrderApplication中的RestTemplate添加负载均衡注解：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@LoadBalanced")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RestTemplate")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("restTemplate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RestTemplate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("这里调用服务就是采用了默认的轮询方式")])])}),[],!1,null,null,null);t.default=r.exports}}]);